apiVersion: apps/v1
kind: Deployment
metadata:
  name: fusionaicoder
  namespace: fusionai
  labels:
    app: fusionaicoder
    environment: production
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: fusionaicoder
  template:
    metadata:
      labels:
        app: fusionaicoder
    spec:
      nodeSelector:
        workload: ai-processing
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - fusionaicoder
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: fusionaicoder
          image: ghcr.io/yourusername/fusionaicoder:main
          imagePullPolicy: Always
          resources:
            limits:
              cpu: "4"
              memory: "8Gi"
              nvidia.com/gpu: "1"
            requests:
              cpu: "1"
              memory: "2Gi"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: ENVIRONMENT
              value: "production"
            - name: AZURE_TENANT_ID
              valueFrom:
                secretKeyRef:
                  name: azure-credentials
                  key: tenant-id
            - name: AZURE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: azure-credentials
                  key: client-id
            - name: AZURE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: azure-credentials
                  key: client-secret
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
            - name: models-volume
              mountPath: /app/models
      volumes:
        - name: config-volume
          configMap:
            name: fusionaicoder-config
        - name: models-volume
          persistentVolumeClaim:
            claimName: models-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: fusionaicoder
  namespace: fusionai
spec:
  selector:
    app: fusionaicoder
  ports:
    - port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fusionaicoder
  namespace: fusionai
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - fusionaicoder.example.com
      secretName: fusionaicoder-tls
  rules:
    - host: fusionaicoder.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fusionaicoder
                port:
                  number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: fusionaicoder
  namespace: fusionai
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fusionaicoder
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: models-pvc
  namespace: fusionai
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: fusionai-storage
  resources:
    requests:
      storage: 50Gi
