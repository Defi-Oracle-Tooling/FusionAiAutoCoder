[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/docs/
'''

[tool.ninja_types]
check_level = "strict"
enable_plugins = [
    "numpy",
    "torch",
    "pydantic",
    "pytest"
]
strict_unions = true
strict_optional = true
enable_variance = true
enable_inference = true
check_overloads = true
check_return_values = true
check_descriptors = true
check_awaitable = true
check_super_classes = true
check_function_bodies = true
check_instance_attributes = true
check_variable_assignments = true
check_protocol_implementations = true
disallow_untyped = true
warn_unreachable = true
warn_unused_ignores = true
warn_redundant_casts = true
error_on_dynamic_attributes = true

[tool.pyright]
include = ["src", "tests"]
exclude = [
    "**/__pycache__",
    "**/node_modules",
    ".git",
    ".venv"
]

typeCheckingMode = "strict"
useLibraryCodeForTypes = true
reportMissingImports = true
reportUnknownMemberType = true
reportUnknownParameterType = true
reportUnknownVariableType = true
reportUnknownArgumentType = true
reportPrivateUsage = true
reportUntypedFunctionDecorator = true
reportUnboundVariable = true
reportInvalidStringEscapeSequence = true
reportUnusedImport = true
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedVariable = true
reportDuplicateImport = true
reportWildcardImportFromLibrary = true
reportOptionalSubscript = true
reportOptionalMemberAccess = true
reportOptionalCall = true
reportOptionalIterable = true
reportOptionalContextManager = true
reportOptionalOperand = true
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
strictParameterNoneValue = true

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config --mypy"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "requires_gpu: marks tests that require GPU"
]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true
omit = [
    "tests/*",
    "setup.py",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
strict_equality = true